/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKUART_H
#define _MOCKUART_H

#include "mcu_periph/uart.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockuart_Init(void);
void Mockuart_Destroy(void);
void Mockuart_Verify(void);




#define uart_periph_init_Expect(p) uart_periph_init_CMockExpect(__LINE__, p)
void uart_periph_init_CMockExpect(UNITY_LINE_TYPE cmock_line, struct uart_periph* p);
#define uart_periph_set_baudrate_Expect(p, baud) uart_periph_set_baudrate_CMockExpect(__LINE__, p, baud)
void uart_periph_set_baudrate_CMockExpect(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint32_t baud);
#define uart_periph_set_bits_stop_parity_Expect(p, bits, stop, parity) uart_periph_set_bits_stop_parity_CMockExpect(__LINE__, p, bits, stop, parity)
void uart_periph_set_bits_stop_parity_CMockExpect(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint8_t bits, uint8_t stop, uint8_t parity);
#define uart_periph_set_mode_Expect(p, tx_enabled, rx_enabled, hw_flow_control) uart_periph_set_mode_CMockExpect(__LINE__, p, tx_enabled, rx_enabled, hw_flow_control)
void uart_periph_set_mode_CMockExpect(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, bool_t tx_enabled, bool_t rx_enabled, bool_t hw_flow_control);
#define uart_transmit_Expect(p, data) uart_transmit_CMockExpect(__LINE__, p, data)
void uart_transmit_CMockExpect(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint8_t data);
#define uart_check_free_space_ExpectAndReturn(p, len, cmock_retval) uart_check_free_space_CMockExpectAndReturn(__LINE__, p, len, cmock_retval)
void uart_check_free_space_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint8_t len, bool_t cmock_to_return);
#define uart_getch_ExpectAndReturn(p, cmock_retval) uart_getch_CMockExpectAndReturn(__LINE__, p, cmock_retval)
void uart_getch_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint8_t cmock_to_return);
#define uart_event_Expect() uart_event_CMockExpect(__LINE__)
void uart_event_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart_char_available_ExpectAndReturn(p, cmock_retval) uart_char_available_CMockExpectAndReturn(__LINE__, p, cmock_retval)
void uart_char_available_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct uart_periph* p, uint16_t cmock_to_return);
#define uart0_init_Expect() uart0_init_CMockExpect(__LINE__)
void uart0_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart1_init_Expect() uart1_init_CMockExpect(__LINE__)
void uart1_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart2_init_Expect() uart2_init_CMockExpect(__LINE__)
void uart2_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart3_init_Expect() uart3_init_CMockExpect(__LINE__)
void uart3_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart4_init_Expect() uart4_init_CMockExpect(__LINE__)
void uart4_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart5_init_Expect() uart5_init_CMockExpect(__LINE__)
void uart5_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uart6_init_Expect() uart6_init_CMockExpect(__LINE__)
void uart6_init_CMockExpect(UNITY_LINE_TYPE cmock_line);

#endif
